n = 6;  %Задает количество критериев

matr = [1,1,0,1,1,1; %матрица, где строки, столбцы - критерии
        1,1,1,1,1,1;
        0,0,1,1,1,1;
        0,0,0,1,1,0;
        0,0,0,0,1,0;
        0,0,0,1,1,1];


weight = ones(n, 1); % вектор 6х1 заполненный 1 

disp(weight); %вывод весов

iter = 3; % кол-во итераций

for it = 1:iter 

    newWeights = matr * weight;
    
    weight = newWeights;
    
    fprintf('Итерация %d:\n', it); %выводит номер текущей итерации
    disp(weight);
end

znak = weight / sum(weight); %нормализует веса, деля каждое значение на сумму всех весов

disp('Итерированную силу критерия:');
disp(weight);

disp('Значимость принятых критериев:'); %выводит нормализованные значения
disp(znak); 




% номер 2 
%Расчет значимости параметров

matr2 = [0.3,0.25,0.25,0.1; %строки и столбцы - параметры, элементы - их оценки
         0.4,0.3,0.3,0.4;
         0.1,0.4,0.15,0.4;
         0.2,0.15,0.30,0.1];

matrixExp = matr2; %копирует матрицу для дальнейшей работы 

par = 4; % кол-во параметров
T = 0; %для подсчёта отклонений

for i = 1:par %цикл по всем параметрам
    r = matr2(:,i); %извлекает столбец, который содержит оценки параметра i
    element = sort(r); %сортирует 
    %disp(element); 
    col = tabulate(element); % функция получения кол-ва одинаковых элементов
    col = flip(col); % переворачивает массив,чтобы изменить порядок строк (?)
    disp('col:');
    disp(col);

    val = col(:,1); % число 
    con = col(:,2); % его количество 
    leng = length(val); % количество 

    num = 1; %переменная для подсчёта рангов
    weight = matrixExp(:,i); %извлекает веса текущего параметра
    for j = 1:leng %цикл по всем значениям
        
        num  = ceil(num); % округляем вверх 

        if con(j)>1 % частота текущего значения больше 1
            num = sum(num:(con(j)+num-1)) / con(j); % среднее значение рангов для повторяющихся значений
            weight(weight == val(j)) = num; % обновляет веса для текущего значения

            T = T + (con(j)^3 - con(j)); %Расчет показателей, указывающих на равные ранги

        else %если частота значения равна 1
            weight(weight == val(j)) = num; %устанавливает ранг для значения
            num = num + 1; %переход к след рангу
        end


    end
    matrixExp(:,i) = weight; %обновляет матрицу для текущего параметра
end

S(par) = sum(matrixExp(par,:)); % сумма рангов для последнего параметра

FullS = sum(S);% общая сумма рангов
d = sum((S-(FullS/par)).^2); % расчет отклонения суммы рангов от среднего значения 

Sogl = 12 * d / (par^2 * (par^3 - par) - par * T); %рассчитывает согласованность 
%на основе отклонения и количества параметров

disp(matrixExp); %вывод обновленной матрицы весов
disp(Sogl); %вывод значения согласованности
